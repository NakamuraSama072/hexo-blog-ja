[{"title":"2025-8-9 v1.0 Changelog","url":"/2025/08/09/first-blog/","content":"这是自建站以来的第一篇博客。由于建站过程很累，而且中途差错不断，我就简单说几点网站内容和遇到的困难，就权且当做是一个网站测试吧。\n之后每次大版本更新完都会发布一个Changelog，以展示新功能、错误修复和一些细节上的优化。\n（你们估计要吐槽白天模式下中间的字看不清楚，是的，我一直在改背景图片的曝光度，但是改来改去也就这个样，很难达到夜晚模式下的效果，所以干脆直接摆烂了。另外，伊吹酱可爱捏）\n新功能/What’s New新增特点/New Features\n使用 Hexo 7.3.0 搭建博客框架，以及 Redefine 2.8.5 作为主题。\n\n\n\n新增了“分类”、“友情链接”和“标签”页面，方便查找博客内容以及列出参考的其他博客网站等。别问我为什么加顿号\n\n\n错误修复/Bug Fix\n修复在 Firefox 内网页渲染异常错误的问题\n修复在“链接”子菜单内打开相应链接时页面提示 404 的问题\n\n关于博客这个博客是干什么的？就如网站横幅标题所要展现的，“Linux and You”。因此，这个博客主要是一些关于Linux的内容，当然也有可能会随机刷新诸如C/C++或者Python之类的文章。\n你是怎么搭建起这个博客的？一开始我用的是 ClawCloud 的云服务（毕竟它的价格非常诱人，Github 老用户还送 $5 免费额度），但是在过了两天之后，博客文件所在的 pod 一直显示Pending（崩了），重启数次也无果（白忙了 2 天……），于是一怒之下直接删库跑路。\n在对比了多家云服务商后，我发现 Azure 和 AWS 费用高的吓人，界面也很难操作；Google 的费用相对低很多，但是有着潜在的隐私问题——你也不想你的个人信息被一家广告商拿去用来盈利吧。\n最后，我决定考虑Github。由于Vercel在某些国家/地区被墙（你可以用某些特殊手段），我采用Github和Netlify的方式部署，目前一直没出什么差错。\n建站时出现过哪些问题？除了之前在“错误修复”和上面部分提到的问题以外，还出现过以下问题：\n\n分支填错。初始分支是main，我记成了master（后来被我删了），导致 VSCode 内 Git 的master分支像幽灵一样一直跑不掉，最后只能删库从头再来。（好在还没有做什么配置）\n中日韩文字乱码，甚至渲染异常。找了一圈最后才发现是我 VSCode 用的是 GBK 而不是 UTF-8 编码导致的。\n\n其他的一些次要问题和不可抗力因素（比如说上课），这里就不一一展开了。\n博客将会采用哪种更新计划？博客将采用类似Debian和Ubuntu的稳定版本更新策略，而非滚动更新。如果采用滚动更新模式，可能会导致以下问题：\n\nGit 提交过于频繁，使得版本历史杂乱，难以管理。\n难以敲定新版本的功能，因为持续的小幅更新可能缺乏明确的阶段性目标。\n时间问题，频繁更新会增加维护成本，而稳定版本能更好地平衡更新节奏与内容质量。\n\n因此，博客会不定期发布经过测试和完善的版本，确保每次更新都带来稳定的体验。\n博客内的文章会有什么提醒或说明部分吗？有。视内容程度，分为以下三种：\n\n说明/提示\n\n表示对当前内容的补充说明或关联信息提示。\n\n  \n    \n      提示\n\n    \n    \n      Cinnamon 桌面环境其实是 GNOME 3 的分支。\n\n    \n  \n\n\n提醒/注意\n\n表示在当前环境下建议（非强制）进行的操作，或者需要注意的事项。\n\n  \n    \n      注意\n\n    \n    \n      C/C++ 编译器不会进行运行时检查，因此一旦出现数组越界或堆栈溢出等问题将导致程序闪退。\n\n    \n  \n\n\n警告/禁止\n\n表示在当前环境下必须（强制）或绝对禁止进行的操作，或者某一项操作可能对系统或硬件引起的不可逆损害。\n有时也可能是为了占坑用，表示该部分内容仍在编写中，暂时不可访问。\n\n  \n    \n      警告\n\n    \n    \n      格式化硬盘会抹掉目标硬盘上所有分区的数据！！\n\n    \n  \n\n后续的新功能\n 新增“关于”页面\n 在底部增加文章推荐部分以快速跳转\n 重新整理导航栏的内容\n 增加评论功能 （目前还没有计划）\n\n","categories":["changelog"],"tags":["changelog"]},{"title":"Debian 13 升级指南","url":"/2025/08/11/debian-13/","content":"废话部分2025 年 8 月 9 日，万众期待的 Debian 13 Trixie 总算是“千呼万唤始出来”，带着全新的 6.12 LTS 内核、GNOME 48以及一众版本几乎为最新的软件包亮相。这使得 Debian 不仅在稳定性上延续了它一贯的口碑，也在硬件支持、性能优化和桌面体验上向前迈出了一大步。对许多开发者、服务器运维人员以及桌面用户来说，这次升级意味着更好的硬件兼容性、更长的安全维护周期，以及更多新功能可供探索。\n在这篇文章中，我将详细讲述如何顺利地从 Debian 12 Bookworm 升级到 Debian 13 Trixie，在享受新功能的同时最大程度的规避风险。\n前提条件在进行升级前，确保当前系统具有以下条件：\n\n最低 5 GB 的可用硬盘空间\n至少 512 MB 内存\namd64 或 arm64 等官方支持架构的 CPU\n良好的网络连接\n\n如果你还没有安装 Debian 12，那就可以跳过本文直接去安装 Debian 13 了。但是你也可以选择看完\n\n  \n    \n      特别提醒\n\n    \n    \n      \n从 Debian 13 Trixie 开始，i386（32位）架构已经不再正式被官方支持，对于仍然需要使用 i386 架构的用户，可以考虑使用其他支持该架构的 Linux 发行版或不进行后续升级。当然你要是能魔改系统就当我没说\n\n整个升级过程涉及到内核更新，一旦更新过程被打断会导致系统无法启动或正常运行。在更新之前，确保你与服务器的网络连接正常，如果无线网络质量很差，请换个地方再试一次，若条件允许，请使用以太网或有线连接。对于身处中国大陆地区的用户，请将软件源修改为当地镜像源（例如清华源等）以加速下载过程。具体步骤请参阅官方说明。可以使用如下命令测试你与服务器的连通性：\n\n\nping www.debian.org # 按下 Ctrl + C 以中止\n    \n  \n\n升级前的准备备份重要数据（可选）这一步需要使用rsync、tar或BorgBackup等工具。当然如果你使用的是ext4文件系统，timeshift也行。具体的操作步骤请参阅官方手册。但是用 btrfs 的还是老老实实地用专业工具吧，你的 timeshift 或 btrfs-assistant 快照全在同一个硬盘上，一旦硬盘磁道或者颗粒挂了就老实了\n更新软件源运行sudo apt update更新软件源并获取新的软件版本。\n\n  \n    \n      提示\n\n    \n    \n      从 Debian 13 开始，软件源配置文件将全面采用新的DEB822格式，路径从原来的/etc/apt/sources.list更改为/etc/apt/sources.list.d/debian.sources。这一点在大家熟悉的 Ubuntu 24.04 LTS 以后版本已经有所体现。\n\n    \n  \n\n不支持“modernize-sources”命令\n\n  \n    \n      特别说明\n\n    \n    \n      Debian 12 原生不支持如下命令：sudo apt modernize-sources凡是在教程中让你在 Debian 12 下使用这个命令去改变软件源配置文件格式的，都是误人子弟的家伙！\n\n    \n  \n\n在该操作结束后，如果出现如下错误信息：\n仓库状态从“stable”变为“oldstable”\n就说明当前 Debian 12 软件源配置文件用的还是 Bookworm 的（因为软件源仓库返回的信息说明 Bookworm 现在已经成为旧稳定版，而系统仍然认为它是当前稳定版）。要解决这一问题，我们需要使用sed来自动替换文本（需要 sudo 权限）：\nsed -i 's/bookworm/trixie/g' /etc/apt/sources.list# 如果使用的是 DEB822 格式的配置文件sed -i 's/bookworm/trixie/g' /etc/apt/sources.list.d/*.listsed -i 's/bookworm/trixie/g' /etc/apt/sources.list.d/*.sources\n\n  \n    \n      提示\n\n    \n    \n      后面两个提示no matches found: xxx的可以暂时不用替换。\n\n    \n  \n\n这一步会将/etc/apt/sources.list, /etc/apt/sources.list.d/*.list和/etc/apt/sources.list.d/*.sources配置文件下所有匹配bookworm的字符串全部替换为trixie，以便能使用当前版本的软件源仓库。\n另一种方式是手动编辑：\nsudo apt edit-sources\n\n用vim或者nano这样的文件编辑器完成这一步也可以。就是有亿点麻烦\n\n  \n    \n      提示\n\n    \n    \n      如果你已经事先将传统的配置文件手动替换为新版的DEB822格式，那么你可以安全删除/etc/apt/sources.list了。\n\n    \n  \n\n更新系统部分软件包升级我们先在不安装新软件包的情况下，对部分软件包进行升级：\nsudo apt updatesudo apt upgrade --without-new-pkgs\n\n\n  \n    \n      注意\n\n    \n    \n      这一部分是不会升级 Linux 内核版本的（你看看 Debian 12 默认的内核版本有多老），我们这么做的目的只是为了先检查有没有什么依赖项问题。如果有，运行sudo apt --fix-broken install以快速解决。\n\n    \n  \n\n内核升级接下来，我们对整个系统进行大规模升级：\nsudo apt full-upgrade -y\n\n这一步由于需要升级内核，所花费的时间比较长，因此可以暂时放松一下。\n在更新过程中可能会出现以下画面：\n升级时重启软件包\n这里我们选Yes，然后继续更新过程。\n更新后操作清理无用的软件包等终端不再输出 apt 信息（等待输入命令）后，我们来清理软件源并删除不需要的软件包：\nsudo apt autoremove -y # 删除不需要的软件包（可以加上--purge选项）sudo apt autoclean # 清理软件源\n\n检查当前更新后版本检查一下内核版本和系统版本：\nuname -r # 内核版本lsb_release -a # 系统版本# 或者运行 cat /etc/os-release\n\n输出应该和下面类似：\n系统信息\n开始体验新版本重启系统：\nsudo reboot\n\n界面主题应该和下面这张图类似：\n登录\n桌面环境\n（为了节省资源，我用的是 Xfce 桌面环境，当然各人用的桌面环境都不一样）\n至此，升级到 Debian 13 Trixie 的工作就正式告一段落了。\n关于下一个 Debian 版本Debian 14 的代号已经正式确定为“forky”，但目前对其将要采用的 LTS 内核和软件包版本等信息知之甚少。不过可以确定的几点是：\n\n继续延续 LTS 策略\n\n如同之前的版本一样，Debian 14 仍将提供至少 5 年的安全更新周期，并在此基础上可能引入更新的内核小版本以增强硬件兼容性。\n\n支持更新的硬件架构\n\n预计将更好地支持新一代 x86_64-v3 指令集，以及 ARM 平台上的最新 SoC，为桌面和服务器设备提供更高性能。\n\n桌面环境版本升级\n\nGNOME、KDE Plasma、Xfce 等主流桌面环境将会跟进上游的主要版本，带来新的功能和界面改进。\n\n软件包清理与替换\n\n一些已不再维护或安全风险较高的软件包将会被移除，并引入更现代的替代方案。\n\n安装与配置体验优化\n\nCalamares、Debian Installer 等安装工具将获得更多改进（目前已经增加教育版、天文版等其他版本），以降低新用户的安装门槛并使用户群体多元化。\n参考https://fullmetalbrackets.com/blog/upgrade-debian-12-bookworm-debian-13-trixie/\nhttps://stackoverflow.com/questions/68802802/repository-http-security-debian-org-debian-security-buster-updates-inrelease\n","categories":["Linux","Debian"],"tags":["Linux","Debian"]}]